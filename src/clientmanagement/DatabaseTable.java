/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package clientmanagement;

import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Dmoney
 */
public class DatabaseTable extends javax.swing.JFrame {

    /**
     * Creates new form DatabaseTable
     */
    public DatabaseTable() {
       // initComponents();
        createTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    
    /*
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        btnDel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Client Records");

        jButton1.setText("Search");

        jLabel2.setText("Client Records");

        jButton2.setText("View All Client Records");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        btnEdit.setText("Edit Record");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        btnDel.setText("Delete");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton1)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 228, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButton2)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btnEdit)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnDel))))))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(221, 221, 221)
                        .addComponent(jLabel2)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(23, 23, 23))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 391, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEdit)
                    .addComponent(btnDel))
                .addGap(36, 36, 36))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    */
    
    private void createTable(){
        
        jButton1 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        scrollPane = new javax.swing.JScrollPane();
     
        dbTable = new JTable(){
            @Override
            public void changeSelection(int rowIndex, int columnIndex, boolean toggle, boolean extend) {
                super.changeSelection(rowIndex, columnIndex, true, false);
            }
        };
        
        btnEdit = new javax.swing.JButton();
        btnDel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        jButton1.setText("Search");
        setTitle("Client Records");
        setResizable(false);
        jLabel2.setText("Client Records");

        jButton2.setText("View All Client Records");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        
        //dbTable.setModel(new javax.swing.table.DefaultTableModel(table.getData(), table.getColumnNames()));
        DefaultTableModel tableModel = new DefaultTableModel(table.getData(), table.getColumnNames()){

            @Override
            public boolean isCellEditable(int row, int column) {
               //all cells false
               return false;
            }  
        };
        dbTable.setModel(tableModel);
        
        scrollPane.setViewportView(dbTable);
        if (dbTable.getColumnModel().getColumnCount() > 0) {
            dbTable.getColumnModel().getColumn(0).setResizable(false);
            dbTable.getColumnModel().getColumn(1).setResizable(false);
            dbTable.getColumnModel().getColumn(2).setResizable(false);
            dbTable.getColumnModel().getColumn(3).setResizable(false);
        }
        dbTable.setAutoCreateRowSorter(true);
        dbTable.setColumnSelectionAllowed(false);
        dbTable.getTableHeader().setReorderingAllowed(false);
        
        
        btnEdit.setText("Edit Record");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });
        
        btnDel.setText("Delete");
        btnDel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDelActionPerformed(evt);
            }
        });
        

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton1)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 219, Short.MAX_VALUE)
                                .addComponent(jButton2))))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(221, 221, 221)
                        .addComponent(jLabel2)
                        .addGap(0, 0, Short.MAX_VALUE)))
                        
                .addGap(42, 42, 42))
                .addComponent(btnEdit)
                .addComponent(btnDel)
            .addGroup(layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addComponent(scrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                
                .addGap(18, 18, 18)
                .addComponent(btnEdit)
                .addComponent(btnDel)
                .addComponent(scrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(100, Short.MAX_VALUE))
        );

        pack();
    }
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        
        int rowCount = dbTable.getSelectedRowCount();
        if (rowCount == 0 ) {
            JOptionPane.showMessageDialog(null, "No records were selected","Error",JOptionPane.WARNING_MESSAGE);
        }
        else if (rowCount > 1){
            JOptionPane.showMessageDialog(null, "You can only edit one (1) record at a time","Error",JOptionPane.WARNING_MESSAGE);
        }
        else{
            int row = dbTable.getSelectedRow();
            int column = 0;// = dbTable.getSelectedColumn();
            //String value = dbTable.getModel().getValueAt(row,column).toString();
            //Below removes the .getModel() call that the above statement has. 
            //This is because the TableModel does not update when the JTable updates, unless specified to do so.
            //This pulls the value from the JTable itself, which is what the user is seeing.
            String value = dbTable.getValueAt(row,column).toString();
            System.out.println(value);
        }
        
        
    }//GEN-LAST:event_btnEditActionPerformed
    
    private void btnDelActionPerformed(java.awt.event.ActionEvent evt){
        
        
        //Get ID for each selected row and add to string to display in JOption dialog
        int [] rows = dbTable.getSelectedRows();
        String [] id = new String[rows.length];
        int column = 0;
        String data = "";
        
        //confirms at least 1 row has been selected for deletion
        if (rows.length != 0){
            for (int i = 0; i < rows.length; i++){
                //data += "id: " + dbTable.getModel().getValueAt(rows[i],column).toString() + "\n";
                //id[i] = dbTable.getModel().getValueAt(rows[i],column).toString();
                //Below removes the .getModel() call that the above statement has. 
                //This is because the TableModel does not update when the JTable updates, unless specified to do so.
                //This pulls the value from the JTable itself, which is what the user is seeing.
                data += "id: " + dbTable.getValueAt(rows[i],column).toString() + "\n";
                id[i] = dbTable.getValueAt(rows[i],column).toString();
            }

            //Dialog box w/ "no" selected by default. Shows which rows are going to be deleted. Deletes entries from database if "yes" is pressed
            int returnValue;
            Object[] options = {"Yes", "No"};
            returnValue = JOptionPane.showOptionDialog(this, 
                    "Do you really want to DELETE the following client records? \n\n" + data, 
                    "Delete Record", 
                    JOptionPane.YES_NO_OPTION, 
                    JOptionPane.WARNING_MESSAGE, 
                    null, options, options[1]);

            if (returnValue == JOptionPane.YES_OPTION){
                //Delete record(s) and "refreshes" table by opening a new instance of it after the DB deletion
                Database deleteRecords = new Database();
                deleteRecords.deleteEntry(id);
                JOptionPane.showMessageDialog(null, "The following records have been deleted: \n\n" + data);
                DatabaseTable tableDisplay = new DatabaseTable();
                tableDisplay.setVisible(true);
                this.dispose();
            }
            else if (returnValue == JOptionPane.NO_OPTION){
                    //Do Nothing
                    JOptionPane.showMessageDialog(null, "No records were deleted","Alert",JOptionPane.INFORMATION_MESSAGE);
            }
        }
        else{
            JOptionPane.showMessageDialog(null, "No records were selected","Error",JOptionPane.WARNING_MESSAGE);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DatabaseTable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DatabaseTable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DatabaseTable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DatabaseTable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DatabaseTable().setVisible(true);
            }
        });
    }

    private TableFromMySqlDatabase table = new TableFromMySqlDatabase();
    private JTable dbTable;
    private javax.swing.JScrollPane scrollPane;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDel;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
